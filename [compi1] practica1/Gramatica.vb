'Generated by the GOLD Parser Builder

Option Explicit On
Option Strict Off

Imports System.IO
Imports System.Windows.Forms


Module MyParser

    Dim lista_escenario As New List(Of String)
    Dim lista_naves As New List(Of String)
    Dim lista_defensa As New List(Of String)
    Dim lista_enemigo As New List(Of String)

    Dim lista_error_lexico As New List(Of String)
    Dim lista_error_sintactico As New List(Of String)

    'Dim codigo_correcto As Boolean = False

    Private Parser As New GOLD.Parser

    Private Enum SymbolIndex
        [Eof] = 0                                 ' (EOF)
        [Error] = 1                               ' (Error)
        [Comment] = 2                             ' Comment
        [Newline] = 3                             ' NewLine
        [Whitespace] = 4                          ' Whitespace
        [Timesdiv] = 5                            ' '*/'
        [Divtimes] = 6                            ' '/*'
        [Divdiv] = 7                              ' '//'
        [Minus] = 8                               ' '-'
        [Dollar] = 9                              ' '$'
        [Lparen] = 10                             ' '('
        [Rparen] = 11                             ' ')'
        [Times] = 12                              ' '*'
        [Comma] = 13                              ' ','
        [Div] = 14                                ' '/'
        [Lbracket] = 15                           ' '['
        [Rbracket] = 16                           ' ']'
        [Plus] = 17                               ' '+'
        [Eq] = 18                                 ' '='
        [Id] = 19                                 ' id
        [Numero] = 20                             ' numero
        [P_ataque] = 21                           ' 'P_ataque'
        [P_defensas] = 22                         ' 'P_defensas'
        [P_enemigos] = 23                         ' 'P_enemigos'
        [P_escenario] = 24                        ' 'P_escenario'
        [P_fin] = 25                              ' 'P_fin'
        [P_fondo] = 26                            ' 'P_fondo'
        [P_frecuencia] = 27                       ' 'P_frecuencia'
        [P_imagen_defensa] = 28                   ' 'P_imagen_defensa'
        [P_imagen_disparo] = 29                   ' 'P_imagen_disparo'
        [P_imagen_enemigo] = 30                   ' 'P_imagen_enemigo'
        [P_imagen_nave] = 31                      ' 'P_imagen_nave'
        [P_inicio] = 32                           ' 'P_inicio'
        [P_naves] = 33                            ' 'P_naves'
        [P_nombre] = 34                           ' 'P_nombre'
        [P_proteccion] = 35                       ' 'P_proteccion'
        [P_punteo] = 36                           ' 'P_punteo'
        [P_sonido] = 37                           ' 'P_sonido'
        [P_sonido_disparo] = 38                   ' 'P_sonido_disparo'
        [P_velocidad] = 39                        ' 'P_velocidad'
        [P_vida] = 40                             ' 'P_vida'
        [Path] = 41                               ' path
        [Areas] = 42                              ' <areas>
        [Contenido_defensa] = 43                  ' <contenido_defensa>
        [Contenido_enemigo] = 44                  ' <contenido_enemigo>
        [Contenido_escenario] = 45                ' <contenido_escenario>
        [Contenido_nave] = 46                     ' <contenido_nave>
        [Defensa] = 47                            ' <defensa>
        [E] = 48                                  ' <E>
        [Enemigo] = 49                            ' <enemigo>
        [Enemigos] = 50                           ' <enemigos>
        [Escenario] = 51                          ' <escenario>
        [Fin_juego] = 52                          ' <fin_juego>
        [Inicio] = 53                             ' <inicio>
        [Juego] = 54                              ' <juego>
        [Nave] = 55                               ' <nave>
        [Naves] = 56                              ' <naves>
        [Operacion] = 57                          ' <operacion>
        [S] = 58                                  ' <S>
        [T] = 59                                  ' <T>
        [Tipo_area] = 60                          ' <tipo_area>
    End Enum

    Private Enum ProductionIndex
        [Inicio] = 0                              ' <inicio> ::= <juego>
        [Juego_Lbracket_P_inicio_Div_Id_Rbracket] = 1 ' <juego> ::= '[' 'P_inicio' '/' id ']' <areas> <fin_juego>
        [Fin_juego_Lbracket_P_fin_Div_Id_Rbracket] = 2 ' <fin_juego> ::= '[' 'P_fin' '/' id ']'
        [Areas] = 3                               ' <areas> ::= <areas> <tipo_area>
        [Areas2] = 4                              ' <areas> ::= <tipo_area>
        [Tipo_area] = 5                           ' <tipo_area> ::= <escenario>
        [Tipo_area2] = 6                          ' <tipo_area> ::= <enemigo>
        [Tipo_area3] = 7                          ' <tipo_area> ::= <defensa>
        [Tipo_area4] = 8                          ' <tipo_area> ::= <nave>
        [Escenario_Lbracket_P_escenario_Div_Id_Rbracket_Dollar] = 9 ' <escenario> ::= '[' 'P_escenario' '/' id ']' <contenido_escenario> '$'
        [Contenido_escenario_P_fondo_Eq_Path_Comma_P_sonido_Eq_Path] = 10 ' <contenido_escenario> ::= 'P_fondo' '=' path ',' 'P_sonido' '=' path
        [Contenido_escenario_P_sonido_Eq_Path_Comma_P_fondo_Eq_Path] = 11 ' <contenido_escenario> ::= 'P_sonido' '=' path ',' 'P_fondo' '=' path
        [Nave_Lbracket_P_naves_Div_Id_Rbracket_Dollar] = 12 ' <nave> ::= '[' 'P_naves' '/' id ']' <naves> '$'
        [Naves_Comma] = 13                        ' <naves> ::= <naves> ',' <contenido_nave>
        [Naves] = 14                              ' <naves> ::= <contenido_nave>
        [Contenido_nave_Comma_P_imagen_nave_Eq_Path] = 15 ' <contenido_nave> ::= <contenido_nave> ',' 'P_imagen_nave' '=' path
        [Contenido_nave_Comma_P_imagen_disparo_Eq_Path] = 16 ' <contenido_nave> ::= <contenido_nave> ',' 'P_imagen_disparo' '=' path
        [Contenido_nave_Comma_P_sonido_disparo_Eq_Path] = 17 ' <contenido_nave> ::= <contenido_nave> ',' 'P_sonido_disparo' '=' path
        [Contenido_nave_Comma_P_vida_Eq] = 18     ' <contenido_nave> ::= <contenido_nave> ',' 'P_vida' '=' <operacion>
        [Contenido_nave_Comma_P_ataque_Eq] = 19   ' <contenido_nave> ::= <contenido_nave> ',' 'P_ataque' '=' <operacion>
        [Contenido_nave_P_imagen_nave_Eq_Path] = 20 ' <contenido_nave> ::= 'P_imagen_nave' '=' path
        [Contenido_nave_P_imagen_disparo_Eq_Path] = 21 ' <contenido_nave> ::= 'P_imagen_disparo' '=' path
        [Contenido_nave_P_sonido_disparo_Eq_Path] = 22 ' <contenido_nave> ::= 'P_sonido_disparo' '=' path
        [Contenido_nave_P_vida_Eq] = 23           ' <contenido_nave> ::= 'P_vida' '=' <operacion>
        [Contenido_nave_P_ataque_Eq] = 24         ' <contenido_nave> ::= 'P_ataque' '=' <operacion>
        [Defensa_Lbracket_P_defensas_Div_Id_Rbracket_Dollar] = 25 ' <defensa> ::= '[' 'P_defensas' '/' id ']' <contenido_defensa> '$'
        [Contenido_defensa_P_imagen_defensa_Eq_Path_Comma_P_proteccion_Eq] = 26 ' <contenido_defensa> ::= 'P_imagen_defensa' '=' path ',' 'P_proteccion' '=' <operacion>
        [Contenido_defensa_P_proteccion_Eq_Comma_P_imagen_defensa_Eq_Path] = 27 ' <contenido_defensa> ::= 'P_proteccion' '=' <operacion> ',' 'P_imagen_defensa' '=' path
        [Enemigo_Lbracket_P_enemigos_Div_Id_Rbracket_Dollar] = 28 ' <enemigo> ::= '[' 'P_enemigos' '/' id ']' <enemigos> '$'
        [Enemigos_Comma] = 29                     ' <enemigos> ::= <enemigos> ',' <contenido_enemigo>
        [Enemigos] = 30                           ' <enemigos> ::= <contenido_enemigo>
        [Contenido_enemigo_Comma_P_nombre_Eq_Path] = 31 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_nombre' '=' path
        [Contenido_enemigo_Comma_P_imagen_enemigo_Eq_Path] = 32 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_imagen_enemigo' '=' path
        [Contenido_enemigo_Comma_P_imagen_disparo_Eq_Path] = 33 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_imagen_disparo' '=' path
        [Contenido_enemigo_Comma_P_sonido_disparo_Eq_Path] = 34 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_sonido_disparo' '=' path
        [Contenido_enemigo_Comma_P_vida_Eq] = 35  ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_vida' '=' <operacion>
        [Contenido_enemigo_Comma_P_ataque_Eq] = 36 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_ataque' '=' <operacion>
        [Contenido_enemigo_Comma_P_frecuencia_Eq] = 37 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_frecuencia' '=' <operacion>
        [Contenido_enemigo_Comma_P_velocidad_Eq] = 38 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_velocidad' '=' <operacion>
        [Contenido_enemigo_Comma_P_punteo_Eq] = 39 ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_punteo' '=' <operacion>
        [Contenido_enemigo_P_nombre_Eq_Path] = 40 ' <contenido_enemigo> ::= 'P_nombre' '=' path
        [Contenido_enemigo_P_imagen_enemigo_Eq_Path] = 41 ' <contenido_enemigo> ::= 'P_imagen_enemigo' '=' path
        [Contenido_enemigo_P_imagen_disparo_Eq_Path] = 42 ' <contenido_enemigo> ::= 'P_imagen_disparo' '=' path
        [Contenido_enemigo_P_sonido_disparo_Eq_Path] = 43 ' <contenido_enemigo> ::= 'P_sonido_disparo' '=' path
        [Contenido_enemigo_P_vida_Eq] = 44        ' <contenido_enemigo> ::= 'P_vida' '=' <operacion>
        [Contenido_enemigo_P_ataque_Eq] = 45      ' <contenido_enemigo> ::= 'P_ataque' '=' <operacion>
        [Contenido_enemigo_P_frecuencia_Eq] = 46  ' <contenido_enemigo> ::= 'P_frecuencia' '=' <operacion>
        [Contenido_enemigo_P_velocidad_Eq] = 47   ' <contenido_enemigo> ::= 'P_velocidad' '=' <operacion>
        [Contenido_enemigo_P_punteo_Eq] = 48      ' <contenido_enemigo> ::= 'P_punteo' '=' <operacion>
        [Operacion] = 49                          ' <operacion> ::= <E>
        [E_Plus] = 50                             ' <E> ::= <E> '+' <T>
        [E_Minus] = 51                            ' <E> ::= <E> '-' <T>
        [E] = 52                                  ' <E> ::= <T>
        [T_Times] = 53                            ' <T> ::= <T> '*' <S>
        [T_Div] = 54                              ' <T> ::= <T> '/' <S>
        [T] = 55                                  ' <T> ::= <S>
        [S_Numero] = 56                           ' <S> ::= numero
        [S_Lparen_Rparen] = 57                    ' <S> ::= '(' <E> ')'
    End Enum

    Public Program As Object     'You might derive a specific object

    Public Sub Setup()
        'This procedure can be called to load the parse tables. The class can
        'read tables using a BinaryReader.
        limpiar_listas()

        Parser.LoadTables(Path.Combine(Application.StartupPath, "grammar.egt"))
    End Sub

    Public Function Parse(ByVal Reader As TextReader) As Boolean
        'This procedure starts the GOLD Parser Engine and handles each of the
        'messages it returns. Each time a reduction is made, you can create new
        'custom object and reassign the .CurrentReduction property. Otherwise, 
        'the system will use the Reduction object that was returned.
        '
        'The resulting tree will be a pure representation of the language 
        'and will be ready to implement.

        Dim Response As GOLD.ParseMessage
        Dim Done As Boolean                  'Controls when we leave the loop
        Dim Accepted As Boolean = False      'Was the parse successful?

        Accepted = False    'Unless the program is accepted by the parser

        Parser.Open(Reader)
        Parser.TrimReductions = False  'Please read about this feature before enabling  

        Done = False
        Do Until Done
            Response = Parser.Parse()

            Select Case Response
                Case GOLD.ParseMessage.LexicalError
                    'Cannot recognize token
                    'Done = True
                    Dim error_lexico As String
                    error_lexico = "Token: " + Parser.CurrentToken.Data.ToString() + " Linea: " + Parser.CurrentPosition.Line.ToString() + " Columna: " + Parser.CurrentPosition.Column.ToString()
                    'MsgBox("error Lex:" + error_lexico)
                    lista_error_lexico.Add(error_lexico)
                    Parser.DiscardCurrentToken()

                Case GOLD.ParseMessage.SyntaxError
                    'Expecting a different token
                    'Done = True
                    Dim error_sintactico As String
                    error_sintactico = "Token: " + Parser.CurrentToken.Data.ToString() + " Linea: " + Parser.CurrentPosition.Line.ToString() + " Columna: " + Parser.CurrentPosition.Column.ToString()
                    'MsgBox("error sint:" + error_sintactico)
                    lista_error_sintactico.Add(error_sintactico)
                    Parser.DiscardCurrentToken()

                Case GOLD.ParseMessage.Reduction
                    'Create a customized object to store the reduction
                    Parser.CurrentReduction = CreateNewObject(Parser.CurrentReduction)

                Case GOLD.ParseMessage.Accept
                    'Accepted!
                    'Program = Parser.CurrentReduction  'The root node!                 
                    Done = True
                    Accepted = True

                Case GOLD.ParseMessage.TokenRead
                    'You don't have to do anything here.

                Case GOLD.ParseMessage.InternalError
                    'INTERNAL ERROR! Something is horribly wrong.
                    Done = True

                Case GOLD.ParseMessage.NotLoadedError
                    'This error occurs if the CGT was not loaded.                   
                    Done = True

                Case GOLD.ParseMessage.GroupError
                    'COMMENT ERROR! Unexpected end of file
                    Done = True
            End Select
        Loop

        Return Accepted
    End Function

    Private Function CreateNewObject(Reduction As GOLD.Reduction) As Object
        Dim Result As Object = Nothing

        With Reduction
            Select Case .Parent.TableIndex
                Case ProductionIndex.Inicio
                    ' <inicio> ::= <juego> 

                Case ProductionIndex.Juego_Lbracket_P_inicio_Div_Id_Rbracket
                    ' <juego> ::= '[' 'P_inicio' '/' id ']' <areas> <fin_juego> 

                Case ProductionIndex.Fin_juego_Lbracket_P_fin_Div_Id_Rbracket
                    ' <fin_juego> ::= '[' 'P_fin' '/' id ']' 
                    If (lista_error_lexico.Count <> 0) Or (lista_error_sintactico.Count <> 0) Then

                        MsgBox("Hay errores en el codigo.")
                    Else
                        MsgBox("Codigo escrito correctamente." + vbNewLine + "Puedes iniciar el juego.")
                        'codigo_correcto = True
                    End If

                Case ProductionIndex.Areas
                    ' <areas> ::= <areas> <tipo_area> 

                Case ProductionIndex.Areas2
                    ' <areas> ::= <tipo_area> 

                Case ProductionIndex.Tipo_area
                    ' <tipo_area> ::= <escenario> 

                Case ProductionIndex.Tipo_area2
                    ' <tipo_area> ::= <enemigo> 

                Case ProductionIndex.Tipo_area3
                    ' <tipo_area> ::= <defensa> 

                Case ProductionIndex.Tipo_area4
                    ' <tipo_area> ::= <nave> 

                Case ProductionIndex.Escenario_Lbracket_P_escenario_Div_Id_Rbracket_Dollar
                    ' <escenario> ::= '[' 'P_escenario' '/' id ']' <contenido_escenario> '$' 
                    Dim id_escenario As String = .Item(3).Data.ToString()
                    lista_escenario.Add("id;" + id_escenario)

                Case ProductionIndex.Contenido_escenario_P_fondo_Eq_Path_Comma_P_sonido_Eq_Path
                    ' <contenido_escenario> ::= 'P_fondo' '=' path ',' 'P_sonido' '=' path 
                    Dim ruta_fondo As String = .Item(2).Data.ToString()
                    lista_escenario.Add("fondo;" + ruta_fondo)
                    Dim ruta_sonido As String = .Item(6).Data.ToString()
                    lista_escenario.Add("sonido;" + ruta_sonido)

                Case ProductionIndex.Contenido_escenario_P_sonido_Eq_Path_Comma_P_fondo_Eq_Path
                    ' <contenido_escenario> ::= 'P_sonido' '=' path ',' 'P_fondo' '=' path 
                    Dim ruta_sonido As String = .Item(2).Data.ToString()
                    lista_escenario.Add("sonido;" + ruta_sonido)
                    Dim ruta_fondo As String = .Item(6).Data.ToString()
                    lista_escenario.Add("fondo;" + ruta_fondo)

                Case ProductionIndex.Nave_Lbracket_P_naves_Div_Id_Rbracket_Dollar
                    ' <nave> ::= '[' 'P_naves' '/' id ']' <naves> '$' 
                    Dim id_nave As String = .Item(3).Data.ToString()
                    lista_naves.Add("id;" + id_nave)

                Case ProductionIndex.Naves_Comma
                    ' <naves> ::= <naves> ',' <contenido_nave> 

                Case ProductionIndex.Naves
                    ' <naves> ::= <contenido_nave> 

                Case ProductionIndex.Contenido_nave_Comma_P_imagen_nave_Eq_Path
                    ' <contenido_nave> ::= <contenido_nave> ',' 'P_imagen_nave' '=' path 
                    Dim ruta_imagen_nave As String = .Item(4).Data.ToString()
                    lista_naves.Add("imagen;" + ruta_imagen_nave)

                Case ProductionIndex.Contenido_nave_Comma_P_imagen_disparo_Eq_Path
                    ' <contenido_nave> ::= <contenido_nave> ',' 'P_imagen_disparo' '=' path 
                    Dim ruta_disparo_nave As String = .Item(4).Data.ToString()
                    lista_naves.Add("disparo;" + ruta_disparo_nave)

                Case ProductionIndex.Contenido_nave_Comma_P_sonido_disparo_Eq_Path
                    ' <contenido_nave> ::= <contenido_nave> ',' 'P_sonido_disparo' '=' path 
                    Dim ruta_sonido_disparo As String = .Item(4).Data.ToString()
                    lista_naves.Add("sonido;" + ruta_sonido_disparo)

                Case ProductionIndex.Contenido_nave_Comma_P_vida_Eq
                    ' <contenido_nave> ::= <contenido_nave> ',' 'P_vida' '=' <operacion> 
                    Dim vida As New Numero
                    vida.valor = Integer.Parse(.Item(4).Data)
                    Dim vida_nave As String = vida.valor.ToString()
                    lista_naves.Add("vida;" + vida_nave)

                Case ProductionIndex.Contenido_nave_Comma_P_ataque_Eq
                    ' <contenido_nave> ::= <contenido_nave> ',' 'P_ataque' '=' <operacion> 
                    Dim ataque As New Numero
                    ataque.valor = Integer.Parse(.Item(4).Data)
                    Dim ataque_nave As String = ataque.valor.ToString()
                    lista_naves.Add("ataque;" + ataque_nave)

                Case ProductionIndex.Contenido_nave_P_imagen_nave_Eq_Path
                    ' <contenido_nave> ::= 'P_imagen_nave' '=' path 
                    lista_naves.Add("imagen;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_nave_P_imagen_disparo_Eq_Path
                    ' <contenido_nave> ::= 'P_imagen_disparo' '=' path 
                    lista_naves.Add("disparo;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_nave_P_sonido_disparo_Eq_Path
                    ' <contenido_nave> ::= 'P_sonido_disparo' '=' path 
                    lista_naves.Add("sonido;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_nave_P_vida_Eq
                    ' <contenido_nave> ::= 'P_vida' '=' <operacion> 
                    Dim vida As New Numero
                    vida.valor = Integer.Parse(.Item(2).Data)
                    lista_naves.Add("vida;" + vida.valor.ToString())

                Case ProductionIndex.Contenido_nave_P_ataque_Eq
                    ' <contenido_nave> ::= 'P_ataque' '=' <operacion> 
                    Dim ataque As New Numero
                    ataque.valor = Integer.Parse(.Item(2).Data)
                    lista_naves.Add("ataque;" + ataque.valor.ToString())

                Case ProductionIndex.Defensa_Lbracket_P_defensas_Div_Id_Rbracket_Dollar
                    ' <defensa> ::= '[' 'P_defensas' '/' id ']' <contenido_defensa> '$' 
                    lista_defensa.Add("id;" + .Item(3).Data.ToString())

                Case ProductionIndex.Contenido_defensa_P_imagen_defensa_Eq_Path_Comma_P_proteccion_Eq
                    ' <contenido_defensa> ::= 'P_imagen_defensa' '=' path ',' 'P_proteccion' '=' <operacion> 
                    Dim imagen_defensa As String = .Item(2).Data.ToString()
                    Dim proteccion_defensa As New Numero
                    proteccion_defensa.valor = Integer.Parse(.Item(6).Data)
                    lista_defensa.Add("imagen;" + imagen_defensa)
                    lista_defensa.Add("protec;" + proteccion_defensa.valor.ToString())

                Case ProductionIndex.Contenido_defensa_P_proteccion_Eq_Comma_P_imagen_defensa_Eq_Path
                    ' <contenido_defensa> ::= 'P_proteccion' '=' <operacion> ',' 'P_imagen_defensa' '=' path 
                    Dim imagen_defensa As String = .Item(6).Data.ToString()
                    Dim proteccion_defensa As New Numero
                    proteccion_defensa.valor = Integer.Parse(.Item(2).Data)
                    lista_defensa.Add("imagen;" + imagen_defensa)
                    lista_defensa.Add("protec;" + proteccion_defensa.valor.ToString())


                Case ProductionIndex.Enemigo_Lbracket_P_enemigos_Div_Id_Rbracket_Dollar
                    ' <enemigo> ::= '[' 'P_enemigos' '/' id ']' <enemigos> '$' 
                    lista_enemigo.Add("id;" + .Item(3).Data.ToString())

                Case ProductionIndex.Enemigos_Comma
                    ' <enemigos> ::= <enemigos> ',' <contenido_enemigo> 

                Case ProductionIndex.Enemigos
                    ' <enemigos> ::= <contenido_enemigo> 

                Case ProductionIndex.Contenido_enemigo_Comma_P_nombre_Eq_Path
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_nombre' '=' path 
                    lista_enemigo.Add("nombre;" + .Item(4).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_imagen_enemigo_Eq_Path
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_imagen_enemigo' '=' path 
                    lista_enemigo.Add("imagen;" + .Item(4).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_imagen_disparo_Eq_Path
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_imagen_disparo' '=' path 
                    lista_enemigo.Add("disparo;" + .Item(4).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_sonido_disparo_Eq_Path
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_sonido_disparo' '=' path 
                    lista_enemigo.Add("sonido;" + .Item(4).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_vida_Eq
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_vida' '=' <operacion> 
                    Dim vida As New Numero
                    vida.valor = Integer.Parse(.Item(4).Data)
                    lista_enemigo.Add("vida;" + vida.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_ataque_Eq
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_ataque' '=' <operacion> 
                    Dim ataque As New Numero
                    ataque.valor = Integer.Parse(.Item(4).Data)
                    lista_enemigo.Add("ataque;" + ataque.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_frecuencia_Eq
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_frecuencia' '=' <operacion> 
                    Dim frecuencia As New Numero
                    frecuencia.valor = Integer.Parse(.Item(4).Data)
                    lista_enemigo.Add("frec;" + frecuencia.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_velocidad_Eq
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_velocidad' '=' <operacion> 
                    Dim velocidad As New Numero
                    velocidad.valor = Integer.Parse(.Item(4).Data)
                    lista_enemigo.Add("velo;" + velocidad.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_Comma_P_punteo_Eq
                    ' <contenido_enemigo> ::= <contenido_enemigo> ',' 'P_punteo' '=' <operacion> 
                    Dim punteo As New Numero
                    punteo.valor = Integer.Parse(.Item(4).Data)
                    lista_enemigo.Add("punteo;" + punteo.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_P_nombre_Eq_Path
                    ' <contenido_enemigo> ::= 'P_nombre' '=' path 
                    lista_enemigo.Add("nombre;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_P_imagen_enemigo_Eq_Path
                    ' <contenido_enemigo> ::= 'P_imagen_enemigo' '=' path
                    lista_enemigo.Add("imagen;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_P_imagen_disparo_Eq_Path
                    ' <contenido_enemigo> ::= 'P_imagen_disparo' '=' path 
                    lista_enemigo.Add("disparo;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_P_sonido_disparo_Eq_Path
                    ' <contenido_enemigo> ::= 'P_sonido_disparo' '=' path 
                    lista_enemigo.Add("sonido;" + .Item(2).Data.ToString())

                Case ProductionIndex.Contenido_enemigo_P_vida_Eq
                    ' <contenido_enemigo> ::= 'P_vida' '=' <operacion> 
                    Dim vida As New Numero
                    vida.valor = Integer.Parse(.Item(2).Data)
                    lista_enemigo.Add("vida;" + vida.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_P_ataque_Eq
                    ' <contenido_enemigo> ::= 'P_ataque' '=' <operacion> 
                    Dim ataque As New Numero
                    ataque.valor = Integer.Parse(.Item(2).Data)
                    lista_enemigo.Add("ataque;" + ataque.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_P_frecuencia_Eq
                    ' <contenido_enemigo> ::= 'P_frecuencia' '=' <operacion> 
                    Dim frec As New Numero
                    frec.valor = Integer.Parse(.Item(2).Data)
                    lista_enemigo.Add("frec;" + frec.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_P_velocidad_Eq
                    ' <contenido_enemigo> ::= 'P_velocidad' '=' <operacion> 
                    Dim velo As New Numero
                    velo.valor = Integer.Parse(.Item(2).Data)
                    lista_enemigo.Add("velo;" + velo.valor.ToString())

                Case ProductionIndex.Contenido_enemigo_P_punteo_Eq
                    ' <contenido_enemigo> ::= 'P_punteo' '=' <operacion> 
                    Dim punteo As New Numero
                    punteo.valor = Integer.Parse(.Item(2).Data)
                    lista_enemigo.Add("punteo;" + punteo.valor.ToString())

                Case ProductionIndex.Operacion
                    ' <operacion> ::= <E> 
                    Dim temp As Numero = .Item(0).Data
                    Result = temp.valor

                Case ProductionIndex.E_Plus
                    ' <E> ::= <E> '+' <T> 
                    Dim temp As New Numero
                    temp.valor = .Item(0).Data.valor + .Item(2).Data.valor
                    Result = temp

                Case ProductionIndex.E_Minus
                    ' <E> ::= <E> '-' <T> 
                    Dim temp As New Numero
                    temp.valor = .Item(0).Data.valor - .Item(2).Data.valor
                    Result = temp

                Case ProductionIndex.E
                    ' <E> ::= <T> 
                    Result = .Item(0).Data

                Case ProductionIndex.T_Times
                    ' <T> ::= <T> '*' <S> 
                    Dim temp As New Numero
                    temp.valor = .Item(0).Data.valor * .Item(2).Data.valor
                    Result = temp

                Case ProductionIndex.T_Div
                    ' <T> ::= <T> '/' <S> 
                    Dim temp As New Numero
                    temp.valor = .Item(0).Data.valor / .Item(2).Data.valor
                    Result = temp

                Case ProductionIndex.T
                    ' <T> ::= <S> 
                    Result = .Item(0).Data

                Case ProductionIndex.S_Numero
                    ' <S> ::= numero 
                    Dim temp As New Numero
                    temp.valor = Double.Parse(.Item(0).Data.ToString)
                    Result = temp

                Case ProductionIndex.S_Lparen_Rparen
                    ' <S> ::= '(' <E> ')' 
                    Result = .Item(1).Data

            End Select
        End With

        Return Result
    End Function

    Public Function retornar_escenarios() As List(Of String)
        Return lista_escenario
    End Function
    Public Function retornar_naves() As List(Of String)
        Return lista_naves
    End Function
    Public Function retornar_defensa() As List(Of String)
        Return lista_defensa
    End Function
    Public Function retornar_enemigos() As List(Of String)
        Return lista_enemigo
    End Function
    Public Function retornar_errores_lexicos() As List(Of String)
        Return lista_error_lexico
    End Function
    Public Function retornar_errores_sintacticos() As List(Of String)
        Return lista_error_sintactico
    End Function
    Public Function validar_errores()
        If (lista_error_lexico.Count <> 0) Or (lista_error_sintactico.Count <> 0) Then
            Return True
        Else
            Return False
        End If
    End Function
    Private Sub limpiar_listas()
        lista_defensa.Clear()
        lista_enemigo.Clear()
        lista_error_lexico.Clear()
        lista_error_sintactico.Clear()
        lista_escenario.Clear()
        lista_naves.Clear()
    End Sub
    Public Sub mo()
        For Each a As String In lista_escenario
            MsgBox(a)
        Next
    End Sub
End Module
